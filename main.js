!function(){"use strict";class e{constructor(e,t,r,s,i){this._data=e,this._cardSelector=t,this._handleImageClick=r,this._handleLikeClick=i,this._openDeleteCardPopup=s,this._selectors={image:".card__image",title:".card__title",likeButton:".card__like-button",likeButtonActive:"card__like-button_checked",deleteButton:".card__trash",cardItem:".card"}}_getTemplate(){return document.querySelector(this._cardSelector).content.cloneNode(!0)}_setCardContent(){const{name:e,link:t,_id:r,isLiked:s}=this._data;this._cardItem.id=`card_${r}`,this._cardImageElement.src=t,this._cardImageElement.alt=e,this._cardImageElement.name=e,this._title.textContent=e,this._cardItem.isLiked=s}_handleLikeButton(e){e.preventDefault(),e.target.classList.toggle(this._selectors.likeButtonActive),this._handleLikeClick({cardId:this._cardItem.id,method:this._cardItem.isLiked?"DELETE":"PUT"}),this._cardItem.isLiked=!this._cardItem.isLiked}_setEventListeners(){this._likeButton.addEventListener("click",(e=>this._handleLikeButton(e))),this._deleteButton.addEventListener("click",(()=>{this._openDeleteCardPopup({cardId:this._cardItem.id})})),this._cardImageElement.addEventListener("click",(()=>this._handleImageClick(this._data)))}generateCard(){return this._cardElement=this._getTemplate(),this._title=this._cardElement.querySelector(this._selectors.title),this._cardImageElement=this._cardElement.querySelector(this._selectors.image),this._likeButton=this._cardElement.querySelector(this._selectors.likeButton),this._deleteButton=this._cardElement.querySelector(this._selectors.deleteButton),this._cardItem=this._cardElement.querySelector(this._selectors.cardItem),this._setCardContent(),this._setEventListeners(),this._data.isLiked&&this._likeButton.classList.toggle(this._selectors.likeButtonActive),this._cardElement}}class t{constructor(e,t){const{inputSelector:r,submitButtonSelector:s,inactiveButtonClass:i,inputErrorClass:o,errorClass:n}=e;this._inputSelector=r,this._submitButtonSelector=s,this._inactiveButtonClass=i,this._inputErrorClass=o,this._errorClass=n,this._formElement=t,this._buttonElement=this._formElement.querySelector(s),this._inputList=Array.from(t.querySelectorAll(r))}_getErrorElement(e){return this._formElement.querySelector(`.${e.name}-input-error`)}_showError(e){const t=this._getErrorElement(e);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass),this.toggleButtonState()}_hideError(e){const t=this._getErrorElement(e);e.classList.remove(this._inputErrorClass),t.textContent="",this.toggleButtonState()}_checkInputValidity(e){e.validity.valid?this._hideError(e):this._showError(e)}_hasInvalidInput(){return this._inputList.some((e=>!e.validity.valid))}_setEventListeners(){this._inputList.forEach((e=>{e.addEventListener("input",(()=>this._checkInputValidity(e)))})),this.toggleButtonState()}toggleButtonState(){const e=this._hasInvalidInput();this._buttonElement.classList.toggle(this._inactiveButtonClass,e),this._buttonElement.disabled=e}enableValidation(){this._setEventListeners()}resetValidation(){this._inputList.forEach((e=>{this._hideError(e)})),this.toggleButtonState()}}const r={pageSelector:".page",profileModalSelector:".page__profile-modal",placeModalSelector:".page__place-modal",imageModalSelector:".page__image-modal",profileNameSelector:".profile__name",profileJobSelector:".profile__job",profileImageSelector:".profile__avatar",cardsListSelector:".places__list",closeModalButtonSelector:".modal__close-button",modalImageSelector:".modal__image",modalImageTitleSelector:".modal__title",deleteCardModalSelector:".page__delete-card-modal",editAvatarModalSelector:".page__edit-avatar-modal"},{pageSelector:s,closeModalButtonSelector:i}=r;class o{constructor(e){let{selector:t}=e;this._popup=document.querySelector(t),this._page=document.querySelector(s)}open(){this._popup.classList.add("modal_opened"),this._page.addEventListener("keydown",this._handleEscClose),this._page.addEventListener("click",this._handleOverlayClick)}close(){this._popup.classList.remove("modal_opened"),this._page.removeEventListener("keydown",this._handleEscClose),this._page.removeEventListener("click",this._handleOverlayClick)}_handleEscClose=e=>{"Escape"===e.key&&this.close()};_handleOverlayClick=e=>{e.target===this._popup&&this.close()};setEventListeners(){this._closeButton=this._popup.querySelector(i),this._closeButton.addEventListener("click",(()=>{this.close()}))}}class n extends o{constructor(e,t){super({selector:e}),this._handleFormSubmit=t,this._inputList=this._popup.querySelectorAll(".form__input"),this._form=this._popup.querySelector(".form"),this._submitBtn=this._form.querySelector("[type='submit']"),this._submitBtnText=this._submitBtn.textContent}_getInputValues(){return this._formValues={},this._inputList.forEach((e=>this._formValues[e.name]=e.value)),this._formValues}getForm(){return this._form}renderLoading(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Saving...";this._submitBtn.textContent=e?t:this._submitBtnText}setInputValues(e){this._inputList.forEach((t=>{t.value=e[t.name]}))}setEventListeners(){this._form.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())})),super.setEventListeners()}}const{modalImageSelector:a,modalImageTitleSelector:l}=r,c=new class{constructor(e){let{baseUrl:t,headers:r}=e;this._baseUrl=t,this._headers=r}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}_request(e,t){return fetch(e,t).then(this._checkResponse)}getUserInfo(){return this._request(`${this._baseUrl}/users/me`,{headers:this._headers})}editUserInfo(e){let{name:t,job:r}=e;return this._request(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:r})})}getInitialCards(){return this._request(`${this._baseUrl}/cards`,{headers:this._headers})}getData(){return Promise.all([this.getUserInfo(),this.getInitialCards()]).then((e=>{let[t,r]=e;return{userInfo:t,cards:r}}))}addCard(e){let{name:t,link:r}=e;return this._request(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:r})})}deleteCard(e){let{cardId:t}=e;return this._request(`${this._baseUrl}/cards/${t.slice(5)}`,{method:"DELETE",headers:this._headers})}likeCard(e){let{cardId:t,method:r}=e;return this._request(`${this._baseUrl}/cards/${t.slice(5)}/likes`,{method:r,headers:this._headers})}editAvatarUrl(e){let{url:t}=e;return this._request(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:t})})}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"19c5994b-226e-4f78-a8d2-c207c10029fd","Content-Type":"application/json"}}),{profileModalSelector:d,placeModalSelector:h,imageModalSelector:_,profileNameSelector:u,profileJobSelector:m,profileImageSelector:p,cardsListSelector:g,deleteCardModalSelector:f,editAvatarModalSelector:E}=r,v=document.querySelector(".profile__edit-button"),S=document.querySelector(".profile__add-button"),I=document.querySelector(".profile__avatar-container"),b={},L=new class{constructor(e,t){let{renderer:r}=e;this._renderer=r,this._container=document.querySelector(t)}setItems(e){this._items=e}renderItems(e){e.forEach((e=>{const t=this._renderer(e);this.addItem(t,{method:"prepend"})}))}addItem(e,t){let{method:r}=t;this._container[r](e)}}({renderer:t=>(t=>new e(t,"#card-template",j,A,T).generateCard())(t)},g),C=new class{constructor(e){let{nameSelector:t,jobSelector:r,profileImageSelector:s}=e;this._nameElement=document.querySelector(t),this._jobElement=document.querySelector(r),this._profileImage=document.querySelector(s)}getUserInfo(){return{name:this._nameElement.textContent,job:this._jobElement.textContent,avatarUrl:this._profileImage.src}}setUserInfo(e){let{name:t,job:r,avatarUrl:s=this._profileImage.src}=e;this._nameElement.textContent=t,this._jobElement.textContent=r,this.setAvatar({avatarUrl:s})}setAvatar(e){let{avatarUrl:t}=e;this._profileImage.src=t}}({nameSelector:u,jobSelector:m,profileImageSelector:p});c.getData().then((e=>{let{userInfo:t,cards:r}=e;const{name:s,about:i,avatar:o}=t;C.setUserInfo({name:s,job:i,avatarUrl:o}),L.renderItems(r.reverse())})).catch((e=>console.error("Error fetching user data and cards:",e)));const k=new n(d,(function(e){let{name:t,job:r}=e;x((function(){return c.editUserInfo({name:t,job:r}).then((e=>{let{name:t,about:r}=e;C.setUserInfo({name:t,job:r})}))}),k)}));k.setEventListeners();const y=new n(h,(function(e){let{title:t,url:r}=e;const s={name:t,link:r};x((function(){return c.addCard(s).then((e=>{L.renderItems([e]),b["place-form"].toggleButtonState()}))}),y)}));y.setEventListeners();const B=new n(E,(function(e){let{url:t}=e;x((function(){return c.editAvatarUrl({url:t}).then((()=>{C.setAvatar({avatarUrl:t})}))}),B)}));B.setEventListeners();const q=new class extends o{constructor(e){super({selector:e}),this._imageElement=this._popup.querySelector(a),this._imageTitle=this._popup.querySelector(l)}open(e){let{name:t,link:r}=e;this._imageElement.src=r,this._imageElement.alt=t,this._imageTitle.textContent=t,super.open()}}(_);q.setEventListeners();const U=new class extends o{constructor(e,t){super({selector:e}),this._confirmButton=this._popup.querySelector(".form__save-button"),this._deleteCard=t}setEventListeners(){this._confirmButton.addEventListener("click",(e=>{e.preventDefault(),this._deleteCard(this._cardId)})),super.setEventListeners()}setCardId(e){this._cardId=e}}(f,(function(e){c.deleteCard({cardId:e}).then((()=>{document.querySelector(`#${e}`).remove(),U.close()})).catch((e=>console.error("Error deleting the card:",e))).finally((()=>{b["confirm-card-delete-form"].resetValidation()}))}));function j(e){q.open(e)}function A(e){let{cardId:t}=e;U.setCardId(t),U.open()}function x(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Saving...";t.renderLoading(!0,r),e().then((()=>{t.close(),t.getForm().reset()})).catch((e=>console.error("Error:",e))).finally((()=>{t.renderLoading(!1)}))}function T(e){let{cardId:t,method:r}=e;c.likeCard({cardId:t,method:r}).catch((e=>console.error("Error during like click:",e)))}var V;U.setEventListeners(),v.addEventListener("click",(function(){const{name:e,job:t}=C.getUserInfo();k.setInputValues({name:e,job:t}),b["profile-form"].resetValidation(),k.open()})),S.addEventListener("click",(function(){b["place-form"].toggleButtonState(),y.open()})),I.addEventListener("click",(function(){const{avatarUrl:e}=C.getUserInfo();B.setInputValues({url:e}),B.open()})),V={inputSelector:".form__input",submitButtonSelector:".form__save-button",inactiveButtonClass:"form__save-button_inactive",inputErrorClass:"form__input_type_error",errorClass:"form__input-error_active"},Array.from(document.forms).forEach((e=>{const r=new t(V,e);r.enableValidation(),b[e.getAttribute("name")]=r}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,